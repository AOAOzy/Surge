# port: 7890 # HTTP(S) 代理服务器端口
# socks-port: 7891 # SOCKS5 代理端口
mixed-port: 10801 # HTTP(S) 和 SOCKS 代理混合端口
# redir-port: 7892 # 透明代理端口，用于 Linux 和 MacOS

# Transparent proxy server port for Linux (TProxy TCP and TProxy UDP)
# tproxy-port: 7893

allow-lan: true # 允许局域网连接
bind-address: "*" # 绑定 IP 地址，仅作用于 allow-lan 为 true，'*'表示所有地址

#  find-process-mode has 3 values:always, strict, off
#  - always, 开启，强制匹配所有进程
#  - strict, 默认，由 clash 判断是否开启
#  - off, 不匹配进程，推荐在路由器上使用此模式
find-process-mode: strict

mode: rule

#自定义 geodata url
geox-url:
  geoip: "https://cdn.jsdelivr.net/gh/Loyalsoldier/v2ray-rules-dat@release/geoip.dat"
  geosite: "https://cdn.jsdelivr.net/gh/Loyalsoldier/v2ray-rules-dat@release/geosite.dat"
  mmdb: "https://cdn.jsdelivr.net/gh/Loyalsoldier/geoip@release/Country.mmdb"

log-level: debug # 日志等级 silent/error/warning/info/debug

ipv6: true # 开启 IPv6 总开关，关闭阻断所有 IPv6 链接和屏蔽 DNS 请求 AAAA 记录

tls:
  certificate: string # 证书 PEM 格式，或者 证书的路径
  private-key: string # 证书对应的私钥 PEM 格式，或者私钥路径
  custom-certifactes:
    - |
      -----BEGIN CERTIFICATE-----
      format/pem...
      -----END CERTIFICATE-----

external-controller: 0.0.0.0:9093 # RESTful API 监听地址
external-controller-tls: 0.0.0.0:9443 # RESTful API HTTPS 监听地址，需要配置 tls 部分配置文件
# secret: "123456" # `Authorization:Bearer ${secret}`

# tcp-concurrent: true # TCP 并发连接所有 IP, 将使用最快握手的 TCP
external-ui: /path/to/ui/folder # 配置 WEB UI 目录，使用 http://{{external-controller}}/ui 访问

# interface-name: en0 # 设置出口网卡

# 全局 TLS 指纹，优先低于 proxy 内的 client-fingerprint
# 可选： "chrome","firefox","safari","ios","random","none" options.
# Utls is currently support TLS transport in TCP/grpc/WS/HTTP for VLESS/Vmess and trojan.
global-client-fingerprint: chrome

# routing-mark:6666 # 配置 fwmark 仅用于 Linux
experimental:

# 类似于 /etc/hosts, 仅支持配置单个 IP
hosts:
# '*.clash.dev': 127.0.0.1
# '.dev': 127.0.0.1
# 'alpha.clash.dev': '::1'
# test.com: [1.1.1.1, 2.2.2.2]
# clash.lan: clash # clash 为特别字段，将加入本地所有网卡的地址
# baidu.com: google.com # 只允许配置一个别名

profile: # 存储 select 选择记录
  store-selected: false
  
  # 持久化 fake-ip
  store-fake-ip: true

# Tun 配置
tun:
  enable: false
  stack: system # gvisor / lwip
  dns-hijack:
    - 0.0.0.0:53 # 需要劫持的 DNS
  # auto-detect-interface: true # 自动识别出口网卡
  # auto-route: true # 配置路由表
  # mtu: 9000 # 最大传输单元
  # strict_route: true # 将所有连接路由到tun来防止泄漏，但你的设备将无法其他设备被访问
  inet4_route_address: # 启用 auto_route 时使用自定义路由而不是默认路由
    - 0.0.0.0/1
    - 128.0.0.0/1
  inet6_route_address: # 启用 auto_route 时使用自定义路由而不是默认路由
    - "::/1"
    - "8000::/1"
  # endpoint_independent_nat: false # 启用独立于端点的 NAT
  # include_uid: # UID 规则仅在 Linux 下被支持，并且需要 auto_route
  # - 0
  # include_uid_range: # 限制被路由的的用户范围
  # - 1000-99999
  # exclude_uid: # 排除路由的的用户
  #- 1000
  # exclude_uid_range: # 排除路由的的用户范围
  # - 1000-99999
  
  # Android 用户和应用规则仅在 Android 下被支持
  # 并且需要 auto_route
  
  # include_android_user: # 限制被路由的 Android 用户
  # - 0
  # - 10
  # include_package: # 限制被路由的 Android 应用包名
  # - com.android.chrome
  # exclude_package: # 排除被路由的 Android 应用包名
  # - com.android.captiveportallogin

#ebpf配置
ebpf:
  auto-redir: # redirect 模式，仅支持 TCP
    - eth0
  redirect-to-tun: # UDP+TCP 使用该功能请勿启用 auto-route
    - eth0

# 嗅探域名 可选配置
sniffer:
  enable: false
  ## 对 redir-host 类型识别的流量进行强制嗅探
  ## 如：Tun、Redir 和 TProxy 并 DNS 为 redir-host 皆属于
  # force-dns-mapping: false
  ## 对所有未获取到域名的流量进行强制嗅探
  # parse-pure-ip: false
  # 是否使用嗅探结果作为实际访问，默认 true
  # 全局配置，优先级低于 sniffer.sniff 实际配置
  override-destination: false
  sniff: # TLS 默认如果不配置 ports 默认嗅探 443
    TLS:
    #  ports: [443, 8443]
    
    # 默认嗅探 80
    HTTP: # 需要嗅探的端口
      
      ports: [80, 8080-8880]
      # 可覆盖 sniffer.override-destination
      override-destination: true
  force-domain:
    - +.v2ex.com
  ## 对嗅探结果进行跳过
  # skip-domain:
  #   - Mijia Cloud
  # 需要嗅探协议
  # 已废弃，若 sniffer.sniff 配置则此项无效
  sniffing:
    - tls
    - http
  # 强制对此域名进行嗅探
  
  # 仅对白名单中的端口进行嗅探，默认为 443，80
  # 已废弃，若 sniffer.sniff 配置则此项无效
  port-whitelist:
    - "80"
    - "443"
    # - 8000-9999


# DNS配置
dns:
  enable: false # 关闭将使用系统 DNS
  prefer-h3: true # 开启 DoH 支持 HTTP/3，将并发尝试
  listen: 0.0.0.0:53 # 开启 DNS 服务器监听
  # ipv6: false # false 将返回 AAAA 的空结果
  # ipv6-timeout: 300 # 单位：ms，内部双栈并发时，向上游查询 AAAA 时，等待 AAAA 的时间，默认 100ms
  # 用于解析 nameserver，fallback 以及其他DNS服务器配置的，DNS 服务域名
  # 只能使用纯 IP 地址，可使用加密 DNS
  default-nameserver:
    - 114.114.114.114
    - 8.8.8.8
    - tls://1.12.12.12:853
    - tls://223.5.5.5:853
  enhanced-mode: fake-ip # or redir-host
  
  fake-ip-range: 198.18.0.1/16 # fake-ip 池设置
  
  # use-hosts: true # 查询 hosts
  
  # 配置不使用fake-ip的域名
  # fake-ip-filter:
  #   - '*.lan'
  #   - localhost.ptlogin2.qq.com
  
  # DNS主要域名配置
  # 支持 UDP，TCP，DoT，DoH，DoQ
  # 这部分为主要 DNS 配置，影响所有直连，确保使用对大陆解析精准的 DNS
  nameserver:
    - 114.114.114.114 # default value
    - 8.8.8.8 # default value
    - tls://223.5.5.5:853 # DNS over TLS
    - https://doh.pub/dns-query # DNS over HTTPS
    - https://dns.alidns.com/dns-query#h3=true # 强制 HTTP/3，与 perfer-h3 无关，强制开启 DoH 的 HTTP/3 支持，若不支持将无法使用
    - https://mozilla.cloudflare-dns.com/dns-query#DNS&h3=true # 指定策略组和使用 HTTP/3
    - dhcp://en0 # dns from dhcp
    - quic://dns.adguard.com:784 # DNS over QUIC
    # - '8.8.8.8#en0' # 兼容指定DNS出口网卡
  
  # 当配置 fallback 时，会查询 nameserver 中返回的 IP 是否为 CN，非必要配置
  # 当不是 CN，则使用 fallback 中的 DNS 查询结果
  # 确保配置 fallback 时能够正常查询
  # fallback:
  #   - tcp://1.1.1.1
  #   - 'tcp://1.1.1.1#ProxyGroupName' # 指定 DNS 过代理查询，ProxyGroupName 为策略组名或节点名，过代理配置优先于配置出口网卡，当找不到策略组或节点名则设置为出口网卡
  
  # 专用于节点域名解析的 DNS 服务器，非必要配置项
  # 配置服务器若查询失败将使用 nameserver，非并发查询
  # proxy-server-nameserver:
  # - https://dns.google/dns-query
  # - tls://one.one.one.one
  
  # 配置 fallback 使用条件
  # fallback-filter:
  #   geoip: true # 配置是否使用 geoip
  #   geoip-code: CN # 当 nameserver 域名的 IP 查询 geoip 库为 CN 时，不使用 fallback 中的 DNS 查询结果
  #   配置强制 fallback，优先于 IP 判断，具体分类自行查看 geosite 库
  #   geosite:
  #     - gfw
  #   如果不匹配 ipcidr 则使用 nameservers 中的结果
  #   ipcidr:
  #     - 240.0.0.0/4
  #   domain:
  #     - '+.google.com'
  #     - '+.facebook.com'
  #     - '+.youtube.com'
  
  # 配置查询域名使用的 DNS 服务器
  nameserver-policy:
    #   'www.baidu.com': '114.114.114.114'
    #   '+.internal.crop.com': '10.0.0.1'
    "geosite:cn,private,apple":
      - https://doh.pub/dns-query
      - https://dns.alidns.com/dns-query
    "www.baidu.com,+.google.cn": [223.5.5.5, https://dns.alidns.com/dns-query]
    ## global，dns 为 rule-providers 中的名为 global 和 dns 规则订阅，
    ## 且 behavior 必须为 domain/classical，当为 classical 时仅会生效域名类规则 
    # "rule-set:global,dns": 8.8.8.8

  
proxies:
# TW
  - name: '🇨🇳 TW'
    server: 199.193.127.36
    type: vless
    port: 49009
    uuid: 16173579-cd53-4cb0-abf3-6e6b9bb6977c
    network: tcp
    servername: www.microsoft.com
    flow: xtls-rprx-vision
    udp: true
    tls: true
    reality-opts:
      public-key: rYH4wPTVzSwtpXgI3U7YxppIP6oudD-425vT7pyhj1w
    client-fingerprint: chrome

# US
  - name: '🇺🇲 US'
    server: 67.230.164.46
    type: vless
    port: 33662
    uuid: fa326ba3-2a5b-4b18-8450-a527af5cc6a3
    network: tcp
    servername: www.microsoft.com
    flow: xtls-rprx-vision
    udp: true
    tls: true
    reality-opts:
      public-key: cDaDzPr3PlS3NM8lreHZbdo-Mhqz8vMBzMSkHXhGIUA
    client-fingerprint: chrome
#SG
  - name: '🇸🇬 SG'
    server: 69.161.221.116
    type: vless
    port: 21931
    uuid: ec77fc6a-358a-45f9-bf19-8095ae82ad9b
    network: tcp
    servername: www.microsoft.com
    flow: xtls-rprx-vision
    udp: true
    tls: true
    reality-opts:
      public-key: rwpbqas_HY8knlW0fFSIeUrjgBXHBzSNboflsLD8elA
    client-fingerprint: chrome
# ZA
  - {name: 🇿🇦 ZA, server: justg.942641.xyz, port: 46511, type: trojan, password: wk5UdTdNsX, sni: justg.942641.xyz,skip-cert-verify: true, udp: true}
#CL
  - {name: 🇨🇱 CL, server: cl.942641.xyz, port: 45999, type: trojan, password: DoW16wCWHt, sni: cl.942641.xyz, udp: true}
#hysteria
  - name: "🇭🇰 HK"
    type: hysteria
    server: hkcmi.942641.xyz
    ports: 43888-48000
    auth_str: 8RqZLrGPCmFPPTtjlgli6nt6B4gIWZDZbcMC8ruQ3fPofncvdp
    alpn:
      - h3
    protocol: udp
    up: 22
    down: 110
    sni: hkcmi.942641.xyz
    skip-cert-verify: false
    recv_window_conn: 2883584
    recv_window: 11534336
    disable_mtu_discovery: true
    fast-open: true
#hysteria
  - name: "🇩🇪 DE"
    type: hysteria
    server: de.942641.xyz
    ports: 47000-48000
    auth_str: mG9GzmUaRbuUJHC7OuxH1kH7dTpvvBroHlCXkezEqqmLq0UuAT
    alpn:
      - h3
    protocol: udp
    up: 55
    down: 550
    sni: de.942641.xyz
    skip-cert-verify: false
    recv_window_conn: 38797312
    recv_window: 155189248
    disable_mtu_discovery: true
    fast-open: true

proxy-groups:
  # Streaming Media
  
  - name: 🖥️ Bahamut
    type: select
    proxies:
      - 🇨🇳 TW

  - name: 🎥 HBO GO
    type: select
    proxies:
      - 🇨🇳 TW

  - name: 📽️ Netflix
    type: select
    proxies:
      - 🎥 Streaming
      - 🇨🇳 TW
      - 🇸🇬 SG
  
  - name: 📼 Disney+
    type: select
    proxies:
      - 🎥 Streaming
      - 🇨🇳 TW
      - 🇸🇬 SG
  
  - name: 📹 Youtube
    type: select
    proxies:
      - 📽️ Video
      - 🇨🇳 TW
      - 🇺🇲 US
      - 🇭🇰 HK
      - 🇩🇪 DE
  
  - name: 🎮 Twitch
    type: select
    proxies:
      - 📽️ Video
      - 🇨🇳 TW
      - 🇺🇲 US
      - 🇭🇰 HK
      - 🇩🇪 DE
  
  - name: 🎥 HBO MAX
    type: select
    proxies:
      - 🇺🇲 US

  - name: 🎞️ Amazon Prime Video
    type: select
    proxies:
      - 📽️ Video
      - 🇨🇳 TW
  
  - name: 📼 Star+
    type: select
    proxies:
      - 🇨🇱 CL
  
  - name: 📺 Bilibili
    type: select
    proxies:
      - DIRECT
      - 🇨🇳 TW
      - 🇭🇰 HK

  # Tools
  - name: 💬 Telegram
    type: select
    proxies:
      - ♻️ ALL
      - 🇺🇲 US
      - 🇨🇳 TW
      - 🇭🇰 HK

  - name: ☁️ Dropbox
    type: select
    proxies:
      - 🇭🇰 HK
      - 🇩🇪 DE
      - 🇨🇱 CL
      - 🇨🇳 TW

  - name: 💬 OpenAI
    type: select
    proxies:
      - 🇸🇬 SG
      - 🇨🇱 CL
      - 🇩🇪 DE
      - 🇿🇦 ZA
  
  - name: 🚀 SpeedTest
    type: select
    proxies:
      - 🇸🇬 SG
      - 🇺🇲 US
      - 🇨🇳 TW
      - 🇨🇱 CL
      - 🇿🇦 ZA
      - 🇭🇰 HK
      - 🇩🇪 DE
  
  - name: 🐟 Other
    type: select
    proxies:
      - 🐟 Final
      - DIRECT
  
  # Other
  - name: 🌍 Global
    type: select
    proxies:
      - ♻️ AUTO
  
  - name: 🌍 Google
    type: select
    proxies:
      - ♻️ AUTO
  
  - name: 🌏 China
    type: select
    proxies:
      - DIRECT
  


  - name: ♻️ ALL
    type: url-test
    proxies:
      - 🇸🇬 SG
      - 🇺🇲 US
      - 🇨🇳 TW
      - 🇿🇦 ZA
    url: 'http://www.gstatic.com/generate_204'
    interval: 300
    #tolerance: 50
    #lazy: true
    #disable-udp: true
  
  - name: ♻️ AUTO
    type: url-test
    proxies:
      - 🇺🇲 US
      - 🇨🇳 TW
      - 🇿🇦 ZA
    url: 'http://www.gstatic.com/generate_204'
    interval: 300

  - name: ♻️ Other
    type: url-test
    proxies:
      - 🇿🇦 ZA
      - 🇨🇳 TW
    url: 'http://www.gstatic.com/generate_204'
    interval: 300
  
  - name: 🎥 Streaming
    type: fallback
    proxies:
      - 🇨🇳 TW
      - 🇸🇬 SG
    url: 'http://www.gstatic.com/generate_204'
    interval: 300
  
  - name: 📽️ Video
    type: fallback
    proxies:
      - 🇨🇳 TW
      - 🇿🇦 ZA
      - 🇺🇲 US
    url: 'http://www.gstatic.com/generate_204'
    interval: 300
  
  - name: 🐟 Final
    type: fallback
    proxies:
      - 🇨🇳 TW
      - 🇿🇦 ZA
      - 🇺🇲 US
    url: 'http://www.gstatic.com/generate_204'
    interval: 300

rule-providers:
  Google:
    type: http
    behavior: domain
    url: "https://ghproxy.com/https://raw.githubusercontent.com/AOAOzy/Clash-Rule/main/Google.yaml"
    path: ./ruleset/Google.yaml
    interval: 86400
  Telegram:
    type: http
    behavior: domain
    url: "https://ghproxy.com/https://raw.githubusercontent.com/AOAOzy/Clash-Rule/main/Telegram.yaml"
    path: ./ruleset/Telegram.yaml
    interval: 86400
  Star+:
    type: http
    behavior: domain
    url: "https://ghproxy.com/https://raw.githubusercontent.com/AOAOzy/Clash-Rule/main/Star.yaml"
    path: ./ruleset/Star.yaml
    interval: 86400
  Bahamut:
    type: http
    behavior: domain
    url: "https://ghproxy.com/https://raw.githubusercontent.com/HotKids/Rules/master/Clash/RuleSet/Bahamut.yaml"
    path: ./ruleset/Bahamut.yaml
    interval: 86400
  Disney+:
    type: http
    behavior: domain
    url: "https://ghproxy.com/https://raw.githubusercontent.com/AOAOzy/Clash-Rule/main//Disney.yaml"
    path: ./ruleset/Disney.yaml
    interval: 86400
  HBO GO:
    type: http
    behavior: domain
    url: "https://ghproxy.com/https://raw.githubusercontent.com/HotKids/Rules/master/Clash/RuleSet/HBO_Go.yaml"
    path: ./ruleset/HBOGO.yaml
    interval: 86400
  HBO MAX:
    type: http
    behavior: domain
    url: "https://ghproxy.com/https://raw.githubusercontent.com/AOAOzy/Clash-Rule/main/HBOMAX.yaml"
    path: ./ruleset/HBOMAX.yaml
    interval: 86400
  Netflix:
    type: http
    behavior: domain
    url: "https://ghproxy.com/https://raw.githubusercontent.com/AOAOzy/Clash-Rule/main/Netflix.yaml"
    path: ./ruleset/Netflix.yaml
    interval: 86400
  Amazon Prime Video:
    type: http
    behavior: domain
    url: "https://ghproxy.com/https://raw.githubusercontent.com/AOAOzy/Clash-Rule/main/AmazonPrimeVideo.yaml"
    path: ./ruleset/AmazonPrimeVideo.yaml
    interval: 86400
  Youtube:
    type: http
    behavior: domain
    url: "https://ghproxy.com/https://raw.githubusercontent.com/AOAOzy/Clash-Rule/main/Youtube.yaml"
    path: ./ruleset/Youtube.yaml
    interval: 86400
  Bilibili:
    type: http
    behavior: domain
    url: "https://ghproxy.com/https://raw.githubusercontent.com/AOAOzy/Clash-Rule/main/Bilibili.yaml"
    path: ./ruleset/Bilibili.yaml
    interval: 86400
  Dropbox:
    type: http
    behavior: domain
    url: "https://ghproxy.com/https://raw.githubusercontent.com/AOAOzy/rules/main/Dropbox.yaml"
    path: ./ruleset/Dropbox.yaml
    interval: 86400
  OpenAI:
    type: http
    behavior: domain
    url: "https://ghproxy.com/https://raw.githubusercontent.com/AOAOzy/rules/main/OpenAI.yaml"
    path: ./ruleset/OpenAI.yaml
    interval: 86400
  Twitch:
    type: http
    behavior: domain
    url: "https://ghproxy.com/https://raw.githubusercontent.com/AOAOzy/Clash-Rule/main/Twitch.yaml"
    path: ./ruleset/Twitch.yaml
    interval: 86400
  SpeedTest:
    type: http
    behavior: domain
    url: "https://ghproxy.com/https://raw.githubusercontent.com/AOAOzy/Clash-Rule/main/SpeedTest.yaml"
    path: ./ruleset/SpeedTest.yaml
    interval: 86400
  ChinaCompanyIp:
    type: http
    behavior: domain
    url: "https://ghproxy.com/https://raw.githubusercontent.com/AOAOzy/Clash-Rule/main/ChinaCompanyIp.yaml"
    path: ./ruleset/ChinaCompanyIp.yaml
    interval: 86400
  ChinaDomain:
    type: http
    behavior: domain
    url: "https://ghproxy.com/https://raw.githubusercontent.com/AOAOzy/Clash-Rule/main/ChinaDomain.yaml"
    path: ./ruleset/ChinaDomain.yaml
    interval: 86400
  ChinaIp:
    type: http
    behavior: domain
    url: "https://ghproxy.com/https://raw.githubusercontent.com/AOAOzy/Clash-Rule/main/ChinaIp.yaml"
    path: ./ruleset/ChinaIp.yaml
    interval: 86400
  Final:
    type: http
    behavior: classical
    url: "https://ghproxy.com/https://raw.githubusercontent.com/AOAOzy/Clash-Rule/main/Final.yaml"
    path: ./ruleset/Final.yaml
    interval: 86400

rules:
  - RULE-SET,OpenAI,💬 OpenAI
  - DOMAIN-SUFFIX,openai.com,💬 OpenAI
  - RULE-SET,Amazon Prime Video,🎞️ Amazon Prime Video
  - RULE-SET,Bahamut,🖥️ Bahamut
  - RULE-SET,Disney+,📼 Disney+
  - RULE-SET,HBO GO,🎥 HBO GO
  - RULE-SET,HBO MAX,🎥 HBO MAX
  - RULE-SET,Netflix,📽️ Netflix
  - RULE-SET,Star+,📼 Star+
  - RULE-SET,Bilibili,📺 Bilibili
  - RULE-SET,Telegram,💬 Telegram
  - RULE-SET,Dropbox,☁️ Dropbox
  - RULE-SET,Twitch,🎮 Twitch
  - RULE-SET,Youtube,📹 Youtube
  - RULE-SET,SpeedTest,🚀 SpeedTest
  - RULE-SET,ChinaCompanyIp,🌏 China
  - RULE-SET,ChinaDomain,🌏 China
  - RULE-SET,ChinaIp,🌏 China
  - RULE-SET,Final,🐟 Other
  - GEOIP,CN,DIRECT
  - MATCH,🐟 Other
